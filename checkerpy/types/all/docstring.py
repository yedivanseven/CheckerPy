DOC_HEADER = 'Checks if the type of all elements of an iterable is {}.'
DOC_BODY = ('\n\n'
            'Parameters\n'
            '----------\n'
            'iterable\n'
            '    The iterable to type-check the elements of.\n'
            'name : str, optional\n'
            '    Name of the variable to type-check the elements of.\n'
            '    Defaults to None.\n'
            '\n'
            'Returns\n'
            '-------\n'
            'iterable\n'
            '    The `iterable` passed in.\n'
            '\n'
            'Attributes\n'
            '----------\n'
            'types : tuple(type)\n'
            '    The type(s) to check for.\n'
            '\n'
            'Methods\n'
            '-------\n'
            'o(callable) : CompositionOf\n'
            '    Daisy-chains the type checker to another `callable`,\n'
            '    returning the functional composition of both.\n'
            'NonEmpty(iterable, name) : iterable\n'
            '    Checks if the (optionally named) `iterable` is empty before\n'
            '    passing it (and its `name`, if provided) on to the actual\n'
            '    type checker.\n'
            'JustLen(iterable, name, length) : iterable\n'
            '    Checks for `length` of `iterable`before passing it (and\n'
            '    its `name`, if provided) on to the actual type checker.\n'
            '\n'
            'Notes\n'
            '-----\n'
            'For convenience, type checkers for built-in iterables (str,\n'
            'tuple, list, set, and dict) are attached as methods as well.\n'
            '\n'
            'Raises\n'
            '------\n'
            'IterError\n'
            '    If the variable passed to the type checker is not an\n'
            '    iterable.\n'
            'WrongTypeError\n'
            '    If the type of any element of `iterable` is not among the\n'
            '    allowed types.\n'
            '\n'
            'See also\n'
            '--------\n'
            'All, NonEmpty, JustLen, CompositionOf')
